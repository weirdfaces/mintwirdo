{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","assets/images/1.png","assets/images/90.png","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledNumberInput","input","attrs","props","min","max","defaultValue","value","StyledButton","button","ResponsiveWrapper","StyledImg1","img","App","useDispatch","useSelector","useState","feedback","setFeedback","claimingNft","setClaimingNft","mintQuantity","setMintQuantity","getData","useEffect","i1","style","padding","textAlign","fontSize","fontWeight","alt","src","i90","Number","target","href","onClick","e","preventDefault","window","ethereum","metamaskIsInstalled","isMetaMask","request","method","Web3EthContract","setProvider","Web3","accounts","SmartContractObj","SmartContract","on","location","reload","onChange","disabled","_amount","mint","send","gasLimit","to","from","utils","toWei","toString","once","err","then","receipt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52e69d6c.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  name: \"\",\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        name: action.payload.name,\n        totalSupply: action.payload.totalSupply,\n        cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n//\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.smartContract.methods.name()\n        .call();\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let cost = await store\n        .getState()\n        .blockchain.smartContract.methods.cost()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          name,\n          totalSupply,\n          cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/ABI.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    await window.ethereum.request({\r\n      method: \"eth_requestAccounts\",\r\n    });\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        // const NetworkData = await SmartContract.networks[networkId]; //#change network number\r\n        if (networkId == 137) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            SmartContract,\r\n            \"0x736701275C152A8C5Ff134E9857218EA19c6066E\" //#done ..chang it to your contract addres\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Polygon\")); //#change network name\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--black);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 2px;\n  width: 2px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 10px;\n  width: 5px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 30px;\n  width: 10px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 60px;\n  width: 20px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 10)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--white);\n  font-size: 30px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--white);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--white);\n  font-size: 20px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  background-color: var(--black);\n  background-image: ${({ image }) =>\n    image\n      ? `url(${image})`\n      : \"https://gateway.pinata.cloud/ipfs/QmUvPLroxDvBoaGDrKh4qEYCTvfyK6hJduWrMwUUHF9Hor\"};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n","export default __webpack_public_path__ + \"static/media/1.f7455a6d.png\";","export default __webpack_public_path__ + \"static/media/90.40372dcf.png\";","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport i1 from \"./assets/images/1.png\";\r\nimport i90 from \"./assets/images/90.png\";\r\n\r\nexport const StyledNumberInput = styled.input.attrs((props) => ({\r\n  type: \"number\",\r\n  min: 1,\r\n  max: 1, //##done..NUMBER OF MINT BER TRANSACTION .CHANGE MINT COUNT BOX COLOR LINE 46\r\n  defaultValue: props.value,\r\n}))`\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: #10990000;\r\n  padding: 9px;\r\n  font-weight: bold;\r\n  color: #ff0000;\r\n  width: 50px;\r\n  cursor: ;\r\n  box-shadow: 2px 8px 4px -2px rgba(250, 250, 0, 0.5);\r\n  -webkit-box-shadow: 2px 3px 10px -2px rgba(0, 0, 0, 0.5);\r\n  -moz-box-shadow: 2px 8px 4px -2px rgba(250, 250, 0, 0.5);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n//##CHANGE MINT COLOR LINE 66 AND BOTTOM SHADOW COLOR LINE 73 AND SHADWO HOVER COLOER LINE 81\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: #41a7ff;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n  width: 300px;\r\n  cursor: pointer;\r\n  box-shadow: 2px 8px 4px -2px rgba(250, 250, 0, 0.5);\r\n  -webkit-box-shadow: 2px 3px 10px -2px rgba(62, 54, 62, 1);\r\n  -moz-box-shadow: 2px 8px 4px -2px rgba(250, 250, 0, 0.5);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: 2px 3px 10px -2px rgba(250, 250, 0, 1);\r\n    -moz-box-shadow: none;\r\n  }\r\n  :hover {\r\n    -webkit-box-shadow: 2px 3px 20px -2px rgba(67, 239, 239, 0.6);\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: ;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const StyledImg1 = styled.img`\r\nheight: 0px;\r\ncenter\r\nposition: fixed;\r\n  margin-bottom: -25px;\r\n  margin-top: 0px;\r\n  @media (min-width: 767px) {\r\n    width: 200px;\r\n    height: 200px;\r\n  }\r\n  transition: width 1s;\r\n  transition: height 1s;\r\n`;\r\n\r\nexport const StyledImg3 = styled.img`\r\n  width: 300px;\r\n  height: 300px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg4 = styled.img`\r\n  border-radius: 50px;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n  box-shadow: 2px 8px 4px -2px rgba(100, 0, 250, 0.5);\r\n  -webkit-box-shadow: 2px 3px 10px -2px rgba(100, 0, 250, 1);\r\n  -moz-box-shadow: 2px 8px 4px -2px rgba(100, 0, 250, 0.5);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n  :hover {\r\n    -webkit-box-shadow: 2px 3px 20px -2px rgba(250, 250, 0, 0.9);\r\n  }\r\n`;\r\n\r\nexport const Gallery = styled.div`\r\n  height: 0px;\r\n  position: fixed;\r\n  margin-bottom: 0px;\r\n\r\n  .photobanner {\r\n    position: fixed;\r\n    top: 0px;\r\n    right: 0px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    animation: bannermove 60s linear infinite alternate;\r\n\r\n    &:hover {\r\n      animation-play-state: ;\r\n    }\r\n  }\r\n\r\n  .photobanner img {\r\n    height: 175px;\r\n    margin: 0 0em;\r\n  }\r\n\r\n  @keyframes bannermove {\r\n    70% {\r\n      transform: translate(-50%, 0);\r\n    }\r\n    70% {\r\n      transform: translate(50%, 0);\r\n    }\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\" 1 Weirdo NFT = 5 Matic\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [mintQuantity, setMintQuantity] = useState(1);\r\n\r\n  const claimNFTs = (_amount) => {\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Preparing your Weird Face...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(_amount)\r\n      .send({\r\n        gasLimit: \"285000\", //#gaslimit\r\n        to: \"0x736701275C152A8C5Ff134E9857218EA19c6066E\", //#done ..chang it to your smart contract addres\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei(\r\n          (5 * _amount).toString(), //#chang the pric same is in contract\r\n          \"ether\"\r\n        ),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"Thank you, your transaction was successfully, do it again.\"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    //#change the i1 to the back round imge you whant\r\n    <s.Screen image={i1}>\r\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 20 }}>\r\n        <s.TextTitle\r\n          style={{ textAlign: \"center\", fontSize: 42, fontWeight: \"bold\" }} //#next line 230 is for big picter above mint bottom\r\n        >\r\n          <StyledImg1 alt={\"\"} src={i90} />\r\n          <s.SpacerXSmall />\r\n        </s.TextTitle>\r\n        <ResponsiveWrapper flex={10} style={{ padding: 0 }}>\r\n          <s.Container flex={10} jc={\"center\"} ai={\"center\"}>\r\n            <s.TextTitle\r\n              style={{ textAlign: \"center\", fontSize: 30, fontWeight: \"bold\" }}\r\n            >\r\n              {data.totalSupply} / 2022\r\n              <s.SpacerSmall />\r\n            </s.TextTitle>\r\n          </s.Container>\r\n          <s.Container\r\n            flex={10}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            // style={{ backgroundColor: \"#000000\", padding: 1 }} //#backron for the mint boutm\r\n          >\r\n            {Number(data.totalSupply) == 2022 ? (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  SOLD OUT!\r\n                </s.TextTitle>\r\n                <s.SpacerMedium />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  You can still trade Weirdo NFTs at{\" \"}\r\n                  <a\r\n                    //# done LINE 218&225 CHANGE NAME\r\n                    target={\"\"}\r\n                    href={\"https://opensea.io/collection/\"}\r\n                  >\r\n                    The Weird | Faces\r\n                  </a>\r\n                </s.TextDescription>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  {feedback}\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT WALLET\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                    <StyledNumberInput\r\n                      value={mintQuantity}\r\n                      onChange={(e) => setMintQuantity(e.target.value)}\r\n                    />\r\n                    <StyledButton\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(mintQuantity);\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {claimingNft\r\n                        ? \"PLEASE HOLD...\"\r\n                        : `Purchase ${mintQuantity} IC NFT`}\r\n                    </StyledButton>\r\n                  </s.Container>\r\n                )}\r\n              </>\r\n            )}\r\n          </s.Container>\r\n        </ResponsiveWrapper>\r\n        <s.SpacerSmall />\r\n        <s.TextTitle style={{ textAlign: \"center\", fontSize: 16 }}>\r\n          Connect to the Polygon network\r\n        </s.TextTitle>\r\n        <s.TextDescription style={{ textAlign: \"center\", fontSize: 20 }}>\r\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 16 }}>\r\n            {\" \"}\r\n          </s.TextDescription>\r\n          {/* <button\r\n            onClick={() =>\r\n              navigator.clipboard.writeText(\r\n                \"https://etherscan.io/token/0x688db0131c807a3495c23bc1b25726a76ea31f49\" //#but yor cotract  adres\r\n              )\r\n            }\r\n          >\r\n            Click to Copy ##change the name Address | Buy Straight from Contract\r\n          </button> */}\r\n        </s.TextDescription>\r\n        <s.SpacerSmall />\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport \"./styles/theme.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}